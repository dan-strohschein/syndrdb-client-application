
export interface ErrorDetail {
    code: string;
    message: string;
    line: number;
    column: number;
    length?: number;
    source?: string; // the token or statement or both that caused the error
    suggestion?: string;
}

export const ErrorCodes = {
    // General syntax errors
    SYNTAX_ERROR: 'SYNTAX_ERROR',
    UNDEFINED_VARIABLE: 'UNDEFINED_VARIABLE',
    TYPE_MISMATCH: 'TYPE_MISMATCH',
    MISSING_SEMICOLON: 'MISSING_SEMICOLON',
    UNEXPECTED_TOKEN: 'UNEXPECTED_TOKEN',
    UNRECOGNIZED_COMMAND: 'UNRECOGNIZED_COMMAND',
    INVALID_IDENTIFIER: 'INVALID_IDENTIFIER',
    DUPLICATE_KEY: 'DUPLICATE_KEY',
    MISSING_CLOSING_BRACKET: 'MISSING_CLOSING_BRACKET',
    INVALID_LITERAL: 'INVALID_LITERAL',
    
    // SyndrQL-specific SELECT statement errors
    SELECT_MISSING_TARGET: 'SELECT_MISSING_TARGET',
    SELECT_INVALID_TARGET: 'SELECT_INVALID_TARGET',
    SELECT_MISSING_FROM: 'SELECT_MISSING_FROM',
    SELECT_INVALID_CLAUSE_ORDER: 'SELECT_INVALID_CLAUSE_ORDER',
    SELECT_INVALID_KEYWORD_SEQUENCE: 'SELECT_INVALID_KEYWORD_SEQUENCE',
    
    // SyndrQL-specific DML statement errors
    INSERT_MISSING_INTO: 'INSERT_MISSING_INTO',
    INSERT_MISSING_VALUES: 'INSERT_MISSING_VALUES',
    UPDATE_MISSING_SET: 'UPDATE_MISSING_SET',
    DELETE_MISSING_FROM: 'DELETE_MISSING_FROM',
    
    // SyndrQL-specific DDL statement errors
    CREATE_MISSING_OBJECT_TYPE: 'CREATE_MISSING_OBJECT_TYPE',
    DROP_MISSING_OBJECT_TYPE: 'DROP_MISSING_OBJECT_TYPE',
    ALTER_MISSING_OBJECT_TYPE: 'ALTER_MISSING_OBJECT_TYPE',
    
    // Collection and identifier errors
    INVALID_COLLECTION_NAME: 'INVALID_COLLECTION_NAME',
    COLLECTION_NAME_REQUIRED: 'COLLECTION_NAME_REQUIRED',
    FIELD_NAME_REQUIRED: 'FIELD_NAME_REQUIRED',
    INVALID_FIELD_NAME: 'INVALID_FIELD_NAME',
    
    // Operator and expression errors
    INVALID_OPERATOR_CONTEXT: 'INVALID_OPERATOR_CONTEXT',
    MISSING_OPERAND: 'MISSING_OPERAND',
    INVALID_COMPARISON: 'INVALID_COMPARISON',
    
    // String and literal errors
    UNTERMINATED_STRING: 'UNTERMINATED_STRING',
    INVALID_NUMBER_FORMAT: 'INVALID_NUMBER_FORMAT',
    INVALID_ESCAPE_SEQUENCE: 'INVALID_ESCAPE_SEQUENCE',
    
    // Clause and structure errors
    MISSING_WHERE_CONDITION: 'MISSING_WHERE_CONDITION',
    INVALID_WHERE_EXPRESSION: 'INVALID_WHERE_EXPRESSION',
    MISSING_JOIN_CONDITION: 'MISSING_JOIN_CONDITION',
    INVALID_ORDER_BY: 'INVALID_ORDER_BY',
    INVALID_GROUP_BY: 'INVALID_GROUP_BY',
    
    // Punctuation and formatting errors
    MISSING_COMMA: 'MISSING_COMMA',
    UNEXPECTED_COMMA: 'UNEXPECTED_COMMA',
    MISSING_PARENTHESIS: 'MISSING_PARENTHESIS',
    UNMATCHED_PARENTHESIS: 'UNMATCHED_PARENTHESIS',
    MISSING_QUOTES: 'MISSING_QUOTES',
    UNMATCHED_QUOTES: 'UNMATCHED_QUOTES',
    
    // Statement completion errors
    INCOMPLETE_STATEMENT: 'INCOMPLETE_STATEMENT',
    EMPTY_STATEMENT: 'EMPTY_STATEMENT',
    STATEMENT_TOO_COMPLEX: 'STATEMENT_TOO_COMPLEX',
    
    // Catch All
    UNKNOWN_ERROR: 'UNKNOWN_ERROR',
};
